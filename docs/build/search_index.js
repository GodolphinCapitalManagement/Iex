var documenterSearchIndex = {"docs":
[{"location":"index.html#Iex.jl-Documentation","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"","category":"section"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"A Julia wrapper for the IEX Cloud API.","category":"page"},{"location":"index.html#Overview","page":"Iex.jl Documentation","title":"Overview","text":"","category":"section"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"This package is a Julia wrapper for the IEX Cloud API. IEX Cloud provides realtime and historical data for commodities, equities, digital currencies (i.e. cryptocurrencies), foreign exchange etc.","category":"page"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"The pricing structure is flexible and scalable, depending on usage measured in terms of messages/month. Each API call has a pre-specified message weight which is debited from the current available message quota for the month.","category":"page"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"The free tier level provides 50,000 core messages/month, unlimited Investors Exchange data, unlimited sandbox testing, and limited access to core data. A new account can be established here.","category":"page"},{"location":"index.html#Installation","page":"Iex.jl Documentation","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"CurrentModule = Iex\nDocTestSetup = quote\n    using Iex\nend","category":"page"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"Modules = [Iex, Iex.Connect]","category":"page"},{"location":"index.html#Iex.balance_sheet-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.balance_sheet","text":"balance_sheet(conn::Connection, symbol::String; period::String=\"quarter\",\n    last::Int=1)\n\nPulls balance sheet data. Available quarterly or annually with the default being the last available quarter.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.batch-Tuple{Connection,String,String}","page":"Iex.jl Documentation","title":"Iex.batch","text":"batch(conn::Connection, symbol::String, types::String; symbols=\"\",\n    daterange=\"1m\",\n    columns = \"date,open,high,low,close,volume,uOpen,uHigh,uLow,uClose,uVolume\"\n\n)\n\nBatch various API endpoints for a symbol or list of symbols\n\nPath Parameters\n\nOption Description\nsymbol Use 'market' to get_stocks multiple symbols (i.e. .../market/batch?...)\n\nQuery String Parameters\n\nOption Details\ntypes Required\n Comma delimited list of endpoints to call. The names should match\n the individual endpoint names. Limited to 10 endpoints.\nsymbols Optional\n Comma delimited list of symbols limited to 100. This parameter is\n used only if market option is used.\n ***(NOTE: If you do not include a symbols parameter the default\n behavior is to return the data for ALL relevant symbols. Please be\n cautious when using this behavior as it can drive up message usage\n quickly.)***\nrange Optional\n Used to specify a chart range if chart is used in types parameter.\n* Optional\n Parameters that are sent to individual endpoints can be specified\n in batch calls and will be applied to each supporting endpoint.\n For example, last can be used for the news endpoint to specify the\n number of articles\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.book-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.book","text":"book(conn::Connection, symbol::String)\n\nResponse includes data from deep and quote. Refer to each endpoint for details.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.cashflow-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.cashflow","text":"cashflow(conn::Connection, symbol::String; period::String=\"quarter\",\n    last::Int=get_iex1)\n\nPulls cash flow data. Available quarterly     or annually, with the default being the last available quarter.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.company-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.company","text":"profile(conn::Connection, symbol::String)\n\nGet company profile\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.dividends-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.dividends","text":"dividends(conn::Connection, symbol::String; daterange::String=\"1m\")\n\nProvides basic dividend data for US equities, ETFs, and Mutual Funds for the last 5 years. For 13+ years of history and comprehensive data, use the Advanced Dividends endpoint.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.earnings-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.earnings","text":"earnings(conn::Connection, symbol::String; period::String=\"quarter\",\n    field::String=\"actualEPS\", last::Int=1)\n\nEarnings data for a given company including the actual EPS, consensus, and fiscal period. Earnings are available quarterly (last 4 quarters) and annually (last 4 years).\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.get_stocks-Tuple{Connection,String,Dict}","page":"Iex.jl Documentation","title":"Iex.get_stocks","text":"get_stocks(conn::Connection, endpoint::String, path_params;\n    query_params=Dict())\n\nGet stock prices in various formats\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.history-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.history","text":"history(conn::Connection, symbol::String; daterange=\"1m\",\n    chartcloseonly::Bool = false,\n    columns = \"date,open,high,low,close,volume,uOpen,uHigh,uLow,uClose,uVolume\"\n)\n\nGets adjusted and unadjusted historical data for up to 15 years. Useful for building charts.\n\nThis endpoint is carried over from the IEX 1.0 API, and we know it has become difficult to use. We are working on new endpoints to simplify time series queries.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.income-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.income","text":"income(conn::Connection, symbol::String; period::String=\"quarter\",\n    last::Int=1)\n\nEarnings data for a given company including the actual EPS, consensus, and fiscal period. Earnings are available quarterly (last 4 quarters) and annually (last 4 years).\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.init_connection-Tuple{}","page":"Iex.jl Documentation","title":"Iex.init_connection","text":"init_connection(;url::String = \"\",version::String=\"\",token::String=\"\")\n\ninitializes IEX connection parameters\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.insider_roster-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.insider_roster","text":"insider_roster(conn::Connection, symbol::String)\n\nReturns the top 10 insiders, with the most recent information.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.insider_summary-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.insider_summary","text":"insider_summary(conn::Connection, symbol::String)\n\nReturns aggregated insiders summary data for the last 6 months.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.insider_transactions-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.insider_transactions","text":"insider_transactions(conn::Connection, symbol::String)\n\nReturns insider transactions.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.logo-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.logo","text":"logo(conn::Connection, symbol::String)\n\nGet company logo\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.metadata-Tuple{Connection}","page":"Iex.jl Documentation","title":"Iex.metadata","text":"metadata(conn::Connection)\n\nGet metadata for account associated wth IEX connection conn\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.news-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.news","text":"news(conn::Connection, symbol::String; last::Int=10\n\nProvides intraday news from over 3,000 global news sources including major publications, regional media, and social.. This endpoint returns up to the last 50 articles. Use the historical news endpoint to fetch news as far back as January 2019\n\nPath Parameters: |Option|Description |:––-|:––––– |symbol|A stock symbol |last  |Number between 1 and 50. Default is 10\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.ohlc-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.ohlc","text":"ohlc(conn::Connection, symbol::String)\n\nResponse includes data from deep and quote. Refer to each endpoint for details.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.peers-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.peers","text":"peers(conn::Connection, symbol::String)\n\nGet company peer group\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.price-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.price","text":"price(conn::Connection, symbol::String)\n\nResponse includes data from deep and quote. Refer to each endpoint for details.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.set_connection_token!-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.set_connection_token!","text":"set_connection_token!(conn::Connection, token::String)\n\nModifies url for connection object conn\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.set_connection_url!-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.set_connection_url!","text":"set_connection_url!(conn::Connection, url::String)\n\nModifies url for connection object conn\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.set_connection_version!-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.set_connection_version!","text":"set_connection_version!(conn::Connection, version::String)\n\nModifies version for connection object conn\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.symbol_quote-Tuple{Connection,String}","page":"Iex.jl Documentation","title":"Iex.symbol_quote","text":"symbol_quote(conn::Connection, symbol::String; field::String=\"latestPrice\")\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.symbols-Tuple{Connection}","page":"Iex.jl Documentation","title":"Iex.symbols","text":"symbols(conn::Connection; format::String=\"JSON\")\n\nThis call returns an array of symbols the Investors Exchange supports for trading. This list is updated daily as of 7:45 a.m. ET. Symbols may be added or removed by the Investors Exchange after the list was produced\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.usage-Tuple{Connection}","page":"Iex.jl Documentation","title":"Iex.usage","text":"usage(get_iex; quota_type=\"messages\")\n\nGet usage for account associated with IEX connection conn\n\n\n\n\n\n","category":"method"},{"location":"index.html#Iex.Connect.IEXException","page":"Iex.jl Documentation","title":"Iex.Connect.IEXException","text":"struct IEXException <: Exception\n\nIEX Cloud uses HTTP response codes to indicate the success or failure of an API request.\n\nFound at API Version\n\n\n\n\n\n","category":"type"},{"location":"index.html#Iex.Connect.status-Tuple{Connection}","page":"Iex.jl Documentation","title":"Iex.Connect.status","text":"status(conn::Connection)\n\nGet status for IEX connection\n\n\n\n\n\n","category":"method"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"# Iex.jl is not currently registered as an official package\n# Please install the development version from GitHub:\n\nPkg.clone(\"git://GitHub.com/GodolphinCapitalManagement/Iex.jl\")","category":"page"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"If you encounter a clear bug, please file a minimal reproducible example on GitHub.","category":"page"},{"location":"index.html#Functions","page":"Iex.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"index.html#Time-Series-for-AAPL","page":"Iex.jl Documentation","title":"Time Series for AAPL","text":"","category":"section"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"Iex.history(iex, \"AAPL\")\nIex.symbol_quote(iex, \"AAPL\")","category":"page"},{"location":"index.html#Usage","page":"Iex.jl Documentation","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Iex.jl Documentation","title":"Iex.jl Documentation","text":"using DataFrames\nusing Plots\n\nusing Iex\nusing Iex.Connect\n\nparams = (\n    token=ENV[\"IEX_SANDBOX_API_KEY\"],\n    url=\"https://sandbox.iexapis.com\",\n    version=\"stable\",\n)\niex = init_connection(;url=params.url, version=params.version, token=params.token);\n\ngr(fmt=:png, size=(800,470))\n# Get daily S&P 500 data\ndata = history(iex, \"SPY\");\n\n# Plot the timeseries\nplot(data.date, data.close, label=\"Close\", title=\"SPY\")\nplot!(data.date, data.high, label=\"High\")\nplot!(data.date, data.low, label=\"Low\")\nsavefig(\"spy.png\")","category":"page"}]
}
